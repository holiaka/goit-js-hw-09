{"mappings":"oeACA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKb,SAASQ,GAAgBT,SAAEA,EAAQC,MAAEA,IACnCJ,EAAAa,OAAOC,QAAQ,uBAAqBX,QAAiBC,M,CAGvD,SAASW,GAAgBZ,SAAEA,EAAQC,MAAEA,IACnCJ,EAAAa,OAAOG,QAAQ,sBAAoBb,QAAeC,M,CAhDjCa,SAASC,cAAc,QAG/BC,iBAAiB,UAG5B,SAAuBC,GACrBA,EAAIC,iBAEJ,MAAMjB,MAAEA,EAAKkB,KAAEA,EAAIC,OAAEA,GAAWH,EAAII,cAAcC,SAClD,IAAIC,EAASC,SAASvB,EAAMwB,OACxBC,EAAQF,SAASL,EAAKM,OACtBE,EAAUH,SAASJ,EAAOK,OAG9B,GAFAG,QAAQC,WAAWT,EAAOK,OAEtBF,EAAS,GAAKG,EAAQ,GAAKC,GAAW,EACxC9B,EAAAa,OAAOG,QAAQ,kCACV,CACL,IAAK,IAAIiB,EAAI,EAAGA,GAAKH,EAASG,IAAK,CACjC,MAAMC,EAAYR,GAAUO,EAAI,GAAKJ,EACrCE,QAAQC,IAAIE,GACZhC,EAAc+B,EAAGC,GAAWC,KAAKvB,GAAiBwB,MAAMrB,E,CAE1Df,EAAAa,OAAOC,QAAQ,a","sources":["src/js/03-promises.js"],"sourcesContent":["// Load libraries\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// Link on FORM\nconst formButton = document.querySelector('form');\n\n// Her listeber\nformButton.addEventListener('submit', onButtonClick);\n\n// Func. on click\nfunction onButtonClick(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let delayT = parseInt(delay.value);\n  let stepT = parseInt(step.value);\n  let amountT = parseInt(amount.value);\n  console.log(typeof amount.value);\n\n  if (delayT < 0 || stepT < 0 || amountT <= 0) {\n    Notify.failure('You enter no corect values');\n  } else {\n    for (let i = 1; i <= amountT; i++) {\n      const fullDelay = delayT + (i - 1) * stepT;\n      console.log(fullDelay);\n      createPromise(i, fullDelay).then(successCallback).catch(failureCallback);\n    }\n    Notify.success('It`s Ok!!!');\n  }\n}\n\n// Func. with Promise\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Callback func.\nfunction successCallback({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction failureCallback({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$successCallback","Notify","success","$47d4ff9957288465$var$failureCallback","failure","document","querySelector","addEventListener","evt","preventDefault","step","amount","currentTarget","elements","delayT","parseInt","value","stepT","amountT","console","log","i","fullDelay","then","catch"],"version":3,"file":"03-promises.8a9eb8a1.js.map"}