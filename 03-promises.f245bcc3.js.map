{"mappings":"sEA0BA,SAASA,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAIpCC,QAAQC,IAAI,WAGZD,QAAQC,IAAI,S,CCjChBC,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAiBC,GAEb,OAAOA,GAAOA,EAAIC,cAAgBC,OAAS,gBAAkBF,C,EDP9CG,SAASC,cAAc,QAE/BC,iBAAiB,UAG5B,SAAuBC,GACrBA,EAAIC,iBAEJ,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CpB,EAAwBkB,EAAxBlB,MAAOqB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAASC,SAASxB,EAAMQ,OACxBiB,EAAQD,SAASH,EAAKb,OACtBkB,EAAUF,SAASF,EAAOd,OAG9B,GAFAL,QAAQC,IAAIuB,EAAApB,EAAA,CAAOe,EAAOd,QAEtBe,EAAU,GAAOE,EAAQ,GAAOC,GAAW,EAC7CE,MAAM,mCAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAU,EAAGG,IAAK,CACrC,IAAMC,EAAYP,GAAWM,EAAI,GAAKJ,EACtCtB,QAAQC,IAAI0B,GACZhC,EAAc+B,EAAGC,E,KAmBvB,IAA4BC,KAiBR,QAhBX,IAAIC,SAAQ,SAACC,EAASC,GAC3B/B,QAAQC,IAAI,qBAA8B+B,OAATJ,IAEjCK,YAAW,WAKPH,EAAQ,gB,GAIT,I,KAKJI,MAAK,SAAAC,G,OAAQnC,QAAQC,IAAIkC,E,IACzBC,OAAM,SAAAC,G,OAASrC,QAAQqC,MAAMA,E","sources":["src/js/03-promises.js","node_modules/@swc/helpers/lib/_type_of.js"],"sourcesContent":["const formButton = document.querySelector(\"form\");\n\nformButton.addEventListener(\"submit\", onButtonClick);\n\n\nfunction onButtonClick(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let delayT = parseInt(delay.value);\n  let stepT = parseInt(step.value);\n  let amountT = parseInt(amount.value)\n  console.log(typeof amount.value);\n  \n  if ((delayT < 0) || (stepT < 0) || (amountT <= 0)) {\n    alert(\"You enter no corect values\")\n  } else {\n    for (let i = 1; i <= amountT + 1; i++) {\n      const fullDelay = delayT + ((i - 1) * stepT);\n      console.log(fullDelay);\n      createPromise(i, fullDelay);\n    }\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  if (shouldResolve) {\n    // Fulfill\n    console.log('Fulfill');\n  } else {\n    // Reject\n    console.log('Reject');\n  }\n}\n\n\nconst fetchUserFromServer = username => {\n  return new Promise((resolve, reject) => {\n    console.log(`Fetching data for ${username}`);\n\n    setTimeout(() => {\n      // Change value of isSuccess variable to simulate request status\n      const isSuccess = true;\n\n      if (isSuccess) {\n        resolve(\"success value\");\n      } else {\n        reject(\"error\");\n      }\n    }, 2000);\n  });\n};\n\nfetchUserFromServer(\"Mango\")\n  .then(user => console.log(user))\n  .catch(error => console.error(error));","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","console","log","Object","defineProperty","$f59351132b4b3cee$exports","value","default","obj","constructor","Symbol","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","step","amount","delayT","parseInt","stepT","amountT","$parcel$interopDefault","alert","i","fullDelay","username","Promise","resolve","reject","concat","setTimeout","then","user","catch","error"],"version":3,"file":"03-promises.f245bcc3.js.map"}